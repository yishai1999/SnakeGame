// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/09/Square/SnakeGame.jack

/**
 * In this game you can move a snake around the screen and
 * try to eat the candy.
 * In the beggining, the square is located at the top left corner.
 * Use the arrow keys to move the snake.
 * Use 'q' to quit.
 */
class SnakeGame {

    // The snake
    field Snake snake;

    //The candy
    field Square candy;

    // The snake's movement direction
    field int direction; // 0=none,1=up,2=down,3=left,4=right

    // The times the candy was eaten
    field int counter;

    field boolean exit;

    /** Constructs a new Snake Game. */
    constructor SnakeGame new() {
        let snake = Snake.new(5);
        let candy = Square.new(100, 100, 10);
        let counter = 0;
        let direction = 0;
        return this;
    }

    /** Deallocates the object's memory. */
    method void dispose() {
        do snake.dispose();
        do candy.dispose();
        do Memory.deAlloc(this);
        return;
    }

    /** Starts the game. Handles inputs from the user that controls
     *  the snake movement direction. */
    method void run() {
        var char key;

        let exit = false;

        while (~exit) {
            // waits for a key to be pressed.
            while (key = 0 & (~exit)) {
                let key = Keyboard.keyPressed();
                do moveSnake();
            }

            if (key = 81) {
                let exit = true;
            }
            if (key = 131) {
                let direction = 1;
            }
            if (key = 133) {
                let direction = 2;
            }
            if (key = 130) {
                let direction = 3;
            }
            if (key = 132) {
                let direction = 4;
            }
            
            // waits for the key to be released.
            while (~((key = 0) | exit )) {
                let key = Keyboard.keyPressed();
                do moveSnake();
            }
        }
            
        return;
	}

    /** Moves the snake by 2 in the current direction. */
    method void moveSnake() {
        if (direction = 1) {
            do snake.moveUp();
        }
        if (direction = 2) {
            do snake.moveDown();
        }
        if (direction = 3) {
            do snake.moveLeft();
        }
        if (direction = 4) {
            do snake.moveRight();
        }
        do candy.draw();
        do checkCandy();
        do Sys.wait(100); // Delays the next movement.
        return;
    }

    method void checkCandy() {
        if (snake.isTouching(candy)) {
            do candy.moveRandom();
            let counter = counter + 1;
            if (counter > 9) {
                do Output.printString("YOU WIN !!!");
                let exit = true;
            }
        }
        return;
    }
}
